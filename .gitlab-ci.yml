workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

stages:
  - lint
  - build
  - package
  - deploy

.base:
  tags:
    - runner-amd64

.base-cargo:
  extends: .base
  variables:
    CARGO_HOME: $CI_PROJECT_DIR/.cargo
  cache:
    key: $CI_PROJECT_NAME
    paths:
      - $CI_PROJECT_DIR/target/
      - $CI_PROJECT_DIR/.cargo/

lint:
  extends: .base-cargo
  stage: lint
  image: registry.ulbricht.casa/docker-images/arch-linux-plasma-build:latest
  script:
    - cargo clippy --release

build:
  extends: .base-cargo
  stage: build
  image: registry.ulbricht.casa/docker-images/arch-linux-plasma-build:latest
  script:
    - cargo build --release --features systemd
    - cp target/release/jewels jewels
  artifacts:
    paths:
      - jewels

package:
  extends: .base
  stage: package
  image: registry.ulbricht.casa/docker-images/arch-linux-plasma-build:latest
  variables:
    ARCH: amd64
    UC_PACKAGED_FILE: jewels-$CI_COMMIT_TAG-$REL-x86_64.pkg.tar.zst
    UC_TAG: $CI_COMMIT_TAG
    REL: 1
  script:
    - cp -r $CI_PROJECT_DIR/* $HOME
    - cd $HOME
    - makepkg
    - git clone https://$UC_BOT_USERNAME:$UC_ARCH_TOKEN@gitlab.imanuel.dev/packages/arch.git
    - cp $CI_PROJECT_DIR/$UC_PACKAGED_FILE $HOME/arch/$UC_PACKAGED_FILE
    - cd arch
    - git config user.email $UC_BOT_EMAIL
    - git config user.name "Jewels"
    - git add .
    - git commit -m "Add new jewels version"
    - git push https://$UC_BOT_USERNAME:$UC_ARCH_TOKEN@gitlab.imanuel.dev/packages/arch.git main -o ci.skip
  artifacts:
    paths:
      - $UC_PACKAGED_FILE
  rules:
    - if: $CI_COMMIT_TAG

trigger-repo:
  variables:
    UC_PACKAGED_FILE: jewels-$CI_COMMIT_TAG-$REL-x86_64.pkg.tar.zst
    UC_TAG: $CI_COMMIT_TAG
    REL: 1
  stage: deploy
  trigger:
    project: packages/arch
    strategy: depend
  rules:
    - if: $CI_COMMIT_TAG
